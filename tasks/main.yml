---

- name: Create the daemon user
  user:
    name: "{{ oauth2_user }}"
    shell: "/bin/false"
    home: "{{ oauth2_dir }}"

- name: Create the directories for site specific configurations
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ oauth2_user }}"
    group: root
    mode: 0750
  with_items:
     - "{{ oauth2_dir }}"
     - "{{ oauth2_dir_tmp }}"
     - "{{ oauth2_dir_log }}"

- name: Download compressed oauth2 binary
  get_url:
    url: "{{ oaut2_proxy_http }}"
    sha256sum: "{{ oaut2_proxy_http_sha256 | default(omit) }}"
    dest: "{{ oauth2_dir_tmp }}/{{ oauth2_compress_filename }}"
    owner: "{{ oauth2_user }}"

- name: unarchive oauth2 binary
  unarchive:
    src: "{{ oauth2_dir_tmp }}/{{ oauth2_compress_filename }}"
    dest: "{{ oauth2_dir }}/"
    creates: "{{ oauth2_dir }}/{{ oauth2_compress_filename }}"
    copy: no

- name: Create current symlink
  file:
    src: "{{ oauth2_dir }}/{{ oauth2_filename }}"
    dest: "{{ oauth2_dir }}/current"
    owner: "{{ oauth2_user }}"
    mode: "0755"
    state: "link"
  notify:
    - oauth2-proxy restart

- name: Deploy init.d script
  template:
    src: "init.d.sh.j2.sh"
    dest: "/etc/init.d/{{ oauth2_identifier }}"
    mode: "0755"
  notify:
    - oauth2-proxy restart
  when: oauth2_init_system == "sysv"

- name: Deploy systemd unit file
  template:
    dest: "{{ oauth2_systemd_unit_path }}"
    src: systemd.service.j2
    # validate: "systemd-analyze verify %s" # see https://github.com/ansible/ansible/issues/19232
  notify:
    - oauth2-proxy restart
  when: oauth2_init_system == "systemd"

- name: Deploy Config
  template:
    src: "config.j2"
    dest: "{{ oauth2_config_path }}"
    owner: "{{ oauth2_user }}"
    mode: "0600"
  notify:
    - oauth2-proxy restart

- name: Service start
  service:
    name: "{{ oauth2_identifier }}"
    state: "started"
    enabled: "yes"
  when: oauth2_init_system != False
